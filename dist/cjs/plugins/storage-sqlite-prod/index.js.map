{"version":3,"file":"index.js","names":["_index","require","_sqliteHelpers","Object","keys","forEach","key","prototype","hasOwnProperty","call","_exportNames","exports","defineProperty","enumerable","get","_sqliteStorageInstance","_utilsRxdbVersion","_sqliteTypes","_sqliteBasicsHelpers","RxStorageSQLiteProd","settings","name","RX_STORAGE_NAME_SQLITE","rxdbVersion","RXDB_VERSION","_proto","createStorageInstance","params","ensureRxStorageInstanceParamsAreCorrect","createSQLiteTrialStorageInstance","warningShown","getRxStorageSQLiteProd","console","warn","join","storage"],"sources":["../../../../src/plugins/storage-sqlite-prod/index.ts"],"sourcesContent":["import {\n    ensureRxStorageInstanceParamsAreCorrect,\n    RxStorage,\n    RxStorageInstanceCreationParams,\n} from '../../index.ts';\nimport { RX_STORAGE_NAME_SQLITE } from './sqlite-helpers.ts';\nimport {\n    createSQLiteTrialStorageInstance,\n    RxStorageInstanceSQLite,\n} from './sqlite-storage-instance.ts';\nimport type {\n    SQLiteInternals,\n    SQLiteInstanceCreationOptions,\n    SQLiteStorageSettings,\n} from './sqlite-types.ts';\nimport { RXDB_VERSION } from '../utils/utils-rxdb-version.ts';\n\nexport * from './sqlite-helpers.ts';\nexport * from './sqlite-types.ts';\nexport * from './sqlite-storage-instance.ts';\nexport * from './sqlite-basics-helpers.ts';\n\nexport class RxStorageSQLiteProd\n    implements RxStorage<SQLiteInternals, SQLiteInstanceCreationOptions>\n{\n    public name = RX_STORAGE_NAME_SQLITE;\n    readonly rxdbVersion = RXDB_VERSION;\n    constructor(public settings: SQLiteStorageSettings) {}\n\n    public createStorageInstance<RxDocType>(\n        params: RxStorageInstanceCreationParams<\n            RxDocType,\n            SQLiteInstanceCreationOptions\n        >\n    ): Promise<RxStorageInstanceSQLite<RxDocType>> {\n        ensureRxStorageInstanceParamsAreCorrect(params);\n        return createSQLiteTrialStorageInstance(this, params, this.settings);\n    }\n}\n\nlet warningShown = false;\n\nexport function getRxStorageSQLiteProd(\n    settings: SQLiteStorageSettings\n): RxStorageSQLiteProd {\n    if (!warningShown) {\n        warningShown = true;\n        console.warn(\n            [\n                '-------------- RxDB SQLite Production Version in Use -------------------------------',\n                'You are using the production version of the SQLite RxStorage from RxDB.',\n                'This is an improved version designed for production use with proper indexing and query optimization.',\n                '-------------------------------------------------------------------------------',\n            ].join('\\n')\n        );\n    }\n\n    const storage = new RxStorageSQLiteProd(settings);\n    return storage;\n}\n"],"mappings":"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","ignoreList":[]}