{"version":3,"file":"index.js","names":["ensureRxStorageInstanceParamsAreCorrect","RX_STORAGE_NAME_SQLITE","createSQLiteTrialStorageInstance","RXDB_VERSION","RxStorageSQLiteProd","settings","name","rxdbVersion","_proto","prototype","createStorageInstance","params","warningShown","getRxStorageSQLiteProd","console","warn","join","storage"],"sources":["../../../../src/plugins/storage-sqlite-prod/index.ts"],"sourcesContent":["import {\n    ensureRxStorageInstanceParamsAreCorrect,\n    RxStorage,\n    RxStorageInstanceCreationParams,\n} from '../../index.ts';\nimport { RX_STORAGE_NAME_SQLITE } from './sqlite-helpers.ts';\nimport {\n    createSQLiteTrialStorageInstance,\n    RxStorageInstanceSQLite,\n} from './sqlite-storage-instance.ts';\nimport type {\n    SQLiteInternals,\n    SQLiteInstanceCreationOptions,\n    SQLiteStorageSettings,\n} from './sqlite-types.ts';\nimport { RXDB_VERSION } from '../utils/utils-rxdb-version.ts';\n\nexport * from './sqlite-helpers.ts';\nexport * from './sqlite-types.ts';\nexport * from './sqlite-storage-instance.ts';\nexport * from './sqlite-basics-helpers.ts';\n\nexport class RxStorageSQLiteProd\n    implements RxStorage<SQLiteInternals, SQLiteInstanceCreationOptions>\n{\n    public name = RX_STORAGE_NAME_SQLITE;\n    readonly rxdbVersion = RXDB_VERSION;\n    constructor(public settings: SQLiteStorageSettings) {}\n\n    public createStorageInstance<RxDocType>(\n        params: RxStorageInstanceCreationParams<\n            RxDocType,\n            SQLiteInstanceCreationOptions\n        >\n    ): Promise<RxStorageInstanceSQLite<RxDocType>> {\n        ensureRxStorageInstanceParamsAreCorrect(params);\n        return createSQLiteTrialStorageInstance(this, params, this.settings);\n    }\n}\n\nlet warningShown = false;\n\nexport function getRxStorageSQLiteProd(\n    settings: SQLiteStorageSettings\n): RxStorageSQLiteProd {\n    if (!warningShown) {\n        warningShown = true;\n        console.warn(\n            [\n                '-------------- RxDB SQLite Production Version in Use -------------------------------',\n                'You are using the production version of the SQLite RxStorage from RxDB.',\n                'This is an improved version designed for production use with proper indexing and query optimization.',\n                '-------------------------------------------------------------------------------',\n            ].join('\\n')\n        );\n    }\n\n    const storage = new RxStorageSQLiteProd(settings);\n    return storage;\n}\n"],"mappings":"AAAA,SACIA,uCAAuC,QAGpC,gBAAgB;AACvB,SAASC,sBAAsB,QAAQ,qBAAqB;AAC5D,SACIC,gCAAgC,QAE7B,8BAA8B;AAMrC,SAASC,YAAY,QAAQ,gCAAgC;AAE7D,cAAc,qBAAqB;AACnC,cAAc,mBAAmB;AACjC,cAAc,8BAA8B;AAC5C,cAAc,4BAA4B;AAE1C,WAAaC,mBAAmB;EAK5B,SAAAA,oBAAmBC,QAA+B,EAAE;IAAA,KAF7CC,IAAI,GAAGL,sBAAsB;IAAA,KAC3BM,WAAW,GAAGJ,YAAY;IAAA,KAChBE,QAA+B,GAA/BA,QAA+B;EAAG;EAAC,IAAAG,MAAA,GAAAJ,mBAAA,CAAAK,SAAA;EAAAD,MAAA,CAE/CE,qBAAqB,GAA5B,SAAOA,qBAAqBA,CACxBC,MAGC,EAC0C;IAC3CX,uCAAuC,CAACW,MAAM,CAAC;IAC/C,OAAOT,gCAAgC,CAAC,IAAI,EAAES,MAAM,EAAE,IAAI,CAACN,QAAQ,CAAC;EACxE,CAAC;EAAA,OAAAD,mBAAA;AAAA;AAGL,IAAIQ,YAAY,GAAG,KAAK;AAExB,OAAO,SAASC,sBAAsBA,CAClCR,QAA+B,EACZ;EACnB,IAAI,CAACO,YAAY,EAAE;IACfA,YAAY,GAAG,IAAI;IACnBE,OAAO,CAACC,IAAI,CACR,CACI,sFAAsF,EACtF,yEAAyE,EACzE,sGAAsG,EACtG,iFAAiF,CACpF,CAACC,IAAI,CAAC,IAAI,CACf,CAAC;EACL;EAEA,IAAMC,OAAO,GAAG,IAAIb,mBAAmB,CAACC,QAAQ,CAAC;EACjD,OAAOY,OAAO;AAClB","ignoreList":[]}